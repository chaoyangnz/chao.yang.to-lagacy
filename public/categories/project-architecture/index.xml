<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Project Architecture on Chao Yang</title>
    <link>https://chaoyang.page/categories/project-architecture/</link>
    <description>Recent content in Project Architecture on Chao Yang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 08 Sep 2015 20:32:18 +0000</lastBuildDate>
    
	<atom:link href="https://chaoyang.page/categories/project-architecture/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JavaEE Multi-popuse Application Frameworks</title>
      <link>https://chaoyang.page/post/javaee-multi-popuse-application-frameworks/</link>
      <pubDate>Tue, 08 Sep 2015 20:32:18 +0000</pubDate>
      
      <guid>https://chaoyang.page/post/javaee-multi-popuse-application-frameworks/</guid>
      <description>This is an application framework to satisfy all kinds of purposes.
Firstly, it would support all sort of channels, which I mean a variety of protocols, message formats, channel-in &amp;amp; chennel-out technologies and application scenarios. Typical ones are like http, jms, tcp, web serviceand formats:json, soap, FIX, iso 8583, customized fix-length.
Secondly, it would abstract the channel-related processing, and make business logic development separate from these channel details. For example, we need to make our service layer transparent for the channel, and not aware of the protocols, devices, client types.</description>
    </item>
    
    <item>
      <title>Unified Identity &amp; Access Control system</title>
      <link>https://chaoyang.page/post/unified-identity-access-control-system/</link>
      <pubDate>Fri, 08 May 2015 13:14:50 +0000</pubDate>
      
      <guid>https://chaoyang.page/post/unified-identity-access-control-system/</guid>
      <description>The target of this system is to build a unified user registry, enterprise organization hierarchy tree, a centralized point for internal user logon and authentication, a flexible Role-Based access control model and an integrated SSO strategy for all other in-house application.
This is the big picture:
user registry and organization tree We build a central repository for employee information except their passwords(these are stored in LDAP for convenient look-up and security).</description>
    </item>
    
  </channel>
</rss>